{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.jsx","components/Burger/Burger.jsx","components/Burger/BuildControls/BuildControl/BuildControl.jsx","components/Burger/BuildControls/BuildControls.jsx","components/UI/Modal/Modal.jsx","components/Burger/OrderSummary/OrderSummary.jsx","containers/BurgerBuilder/BurgerBuilder.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","children","Fragment","className","classes","Content","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","ingredients","transformedIngredients","Object","keys","map","igKey","Array","_","i","key","flat","length","BuildControl","label","ingredientAdded","ingredientRemoved","Label","Less","onClick","More","controls","BuildControls","disabled","price","purchasable","toFixed","ctrl","OrderButton","Modal","OrderSummary","ingredientSummary","style","textTransform","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","updatePurchaseState","sum","values","reduce","el","setState","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","removeIngredientHandler","oldCount","priceDeduction","disabledInfo","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e92f7447.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","import React from 'react';\nimport classes from './Layout.module.css'\n\nconst Layout = ({children}) => (\n  <React.Fragment>\n    <main className={classes.Content}>\n      {children}\n    </main>\n  </React.Fragment>\n)\n \nexport default Layout;","import React from 'react';\nimport classes from './BurgerIngredient.module.css'\nimport PropTypes from 'prop-types'\n\nconst BurgerIngredient = ({type}) => {\n  let ingredient = null\n\n  switch(type){\n    case('bread-bottom') : \n      ingredient= <div className={classes.BreadBottom}></div>\n      break;\n    case('bread-top'):\n      ingredient = (\n        <div className={classes.BreadTop}>\n          <div className={classes.Seeds1}></div>\n          <div className={classes.Seeds2}></div>   \n        </div>\n      )\n      break;\n    case('meat'):\n        ingredient = <div className={classes.Meat}></div>\n        break;\n    case('cheese'):\n        ingredient = <div className={classes.Cheese}></div>\n        break;\n    case('salad'):\n        ingredient = <div className={classes.Salad}></div>\n        break\n    case('bacon'):\n        ingredient = <div className={classes.Bacon}></div>\n        break\n    default:\n      ingredient = null\n      break\n  }\n  return ingredient;\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n}\n \nexport default BurgerIngredient;","import React from 'react'\nimport BurgerIngredient from  './BurgerIngredient/BurgerIngredient'\nimport classes from './Burger.module.css'\n\nconst Burger = ({ingredients}) => {\n\n  let transformedIngredients = Object.keys(ingredients)\n    .map(igKey => {\n      return [...Array(ingredients[igKey])].map((_, i) => {\n       return <BurgerIngredient key={igKey + i } type={igKey} />\n      })\n    })\n    .flat()\n\n  if(transformedIngredients.length === 0){\n    transformedIngredients = <p>Please start adding ingredients!</p>\n  }\n\n  return ( \n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n   );\n}\n \nexport default Burger;","import React from 'react';\nimport classes from './BuildControl.module.css'\n\nconst BuildControl = ({label, ingredientAdded, ingredientRemoved}) => {\n  return ( \n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{label}</div>\n      <button className={classes.Less} onClick={ingredientRemoved}>Less</button>\n      <button className={classes.More} onClick={ingredientAdded}>More</button>\n    </div>\n   );\n}\n \nexport default BuildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl'\n\n\nconst controls = [\n  {label: 'Salad', type:'salad'},\n  {label: 'Bacon', type:'bacon'},\n  {label: 'Cheese', type:'cheese'},\n  {label: 'Meat', type:'meat'}\n]\n\nconst BuildControls = ({ingredientAdded, ingredientRemoved, disabled, price, purchasable}) => {\n  return ( \n    <div className={classes.BuildControls}>\n      <p>Current price:<strong>{price.toFixed(2)}</strong></p>\n      {controls.map(ctrl => (\n         <BuildControl \n         key={ctrl.label} \n         label={ctrl.label} \n         ingredientAdded={() => ingredientAdded(ctrl.type)}\n         ingredientRemoved={() => ingredientRemoved(ctrl.type)}\n         disabled={disabled[ctrl.type]}\n         />\n      ))}\n      <button \n        className={classes.OrderButton}\n        disabled={!purchasable}\n      >\n        ORDER NOW\n      </button>\n    </div>\n   );\n}\n \nexport default BuildControls;","import React from 'react';\nimport classes from './Modal.module.css'\n\nconst Modal = ({children}) => {\n  return ( \n    <div className={classes.Modal}>\n      {children}\n    </div> \n  );\n}\n \nexport default Modal;","import React from 'react';\n\nconst OrderSummary = ({ingredients}) => {\n  const ingredientSummary = Object.keys(ingredients)\n.map(igKey => <li><span style={{textTransform: 'capitalize'}}>{igKey}</span>: {ingredients[igKey]}</li> )\n\n  return ( \n    <>\n      <h3>Your Order</h3>\n      <p>A delicious burger with the following ingredients</p>\n      <ul>\n        {ingredientSummary}\n      </ul>\n      <p>Continue to checkout?</p>\n    </>\n   );\n}\n \nexport default OrderSummary;","import React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n}\n\nclass BurgerBuilder extends Component {\n  state = { \n    ingredients: {\n      salad: 0,\n      cheese: 0,\n      meat: 0,\n      bacon: 0,\n    },\n    totalPrice: 4,\n    purchasable:false,\n   }\n   updatePurchaseState = (ingredients) => {\n     const sum = Object.values(ingredients).reduce((sum, el) => {\n        return sum + el\n      }, 0)\n     this.setState({purchasable: sum > 0})\n   }\n\n   addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type]\n    const updatedCount = oldCount + 1\n    const updatedIngredients = {\n      ...this.state.ingredients\n    }\n    updatedIngredients[type] = updatedCount\n    const priceAddition = INGREDIENT_PRICES[type]\n\n    const oldPrice = this.state.totalPrice\n    const newPrice = oldPrice + priceAddition\n     \n    this.setState({totalPrice : newPrice, ingredients: updatedIngredients})\n    this.updatePurchaseState(updatedIngredients)\n   }\n\n   removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type]\n    if(oldCount <= 0){\n      return\n    }\n    const updatedCount = oldCount - 1\n    const updatedIngredients = {\n      ...this.state.ingredients\n    }\n    updatedIngredients[type] = updatedCount\n    const priceDeduction = INGREDIENT_PRICES[type]\n\n    const oldPrice = this.state.totalPrice\n    const newPrice = oldPrice - priceDeduction\n     \n    this.setState({totalPrice : newPrice, ingredients: updatedIngredients})\n    this.updatePurchaseState(updatedIngredients)\n   }\n\n  render() { \n    const disabledInfo={\n      ...this.state.ingredientRemoved\n    }\n    for (const key in disabledInfo) {\n      disabledInfo[key] = disabledInfo <= 0\n    }\n    return ( \n      <React.Fragment>\n        <Modal>\n          <OrderSummary ingredients={this.state.ingredients}/>\n        </Modal>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n        ingredientAdded={this.addIngredientHandler}\n        ingredientRemoved={this.removeIngredientHandler}\n        disabled={disabledInfo}\n        purchasable={this.state.purchasable}\n        price={this.state.totalPrice}\n        />\n      </React.Fragment>\n     );\n  }\n}\n \nexport default BurgerBuilder;","import React, {Component} from 'react';\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n\n\n\nclass App extends Component { \n  render(){\n    return (\n      <div className=\"App\">\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}